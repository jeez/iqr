%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: Prc_Simulation_xpl_2_tree.dvi
%%CreationDate: Wed Dec 13 01:56:10 2000
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Prc_Simulation_xpl_2_tree.dvi -o
%+ Prc_Simulation_xpl_2_tree.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.12.13:0156
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600
(Prc_Simulation_xpl_2_tree.dvi) @start
%DVIPSBitmapFont: Fa ecrm1095 10.95 49
/Fa 49 122 df<DA03FFEB0FE0021F9038C07FF8913AFE00F1F81CD901F890383BE07ED9
07E090387FC0FF90390FC001FFD91F805CD93F005C5B017E167E01FE6D48130049147EAE
B91280A3D800FCC7007EC7FCB3AE486C14FF277FFFF83F13FFA338407FBF35>27
D<1430147014E0EB01C0EB0380EB07005B131E5BA25B5BA2485AA2485AA212075B120FA2
90C7FC5AA2121E123EA3123C127CA6127812F8B21278127CA6123C123EA3121E121FA27E
7FA212077F1203A26C7EA26C7EA213787FA27F7F7FEB0380EB01C0EB00E014701430145A
77C323>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A27FA2133E131E13
1FA27F1480A2130714C0A3130314E0A6130114F0B214E01303A614C01307A31480130FA2
14005BA2131E133E133CA25BA25BA2485A485AA2485A48C7FC120E5A5A5A5A5A145A7BC3
23>I<121C127FEAFF80A213C0A3127F121C1200A512011380A2120313005A1206120E12
0C121C5A5A12600A1B788819>44 D<EB03FC90381FFF8090383E07C09038F801F048486C
7E4848137C49133C0007143E48487FA248C7EA0F80A24815C0A4007EEC07E0A500FE15F0
B3A3007E15E0A4007F140F6C15C0A46C15806D131F000F1500A26C6C133EA26C6C5B6C6C
5B6C6C485A90383E07C06DB45AD903FCC7FC243F7CBC2D>48 D<14C013031307131F137F
EA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF
8090B512E03901F00FF839078003FC48486C7E000E6D7E48EC7F8048EC3FC012300070EC
1FE01260A200FEEC0FF07E7FA56CC7FC121CC813E0151FA216C0153F1680157F160015FE
4A5AA24A5A4A5A4A5A5D4A5A023EC7FC5C5C495A495A5C495A49C71230131E5B5B491460
485A485A485A90C812E048B6FC5A5A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF80
90B512E03901F807F83907C003FC48C66C7E000E6D7E48EC7F80EA1F80486CEB3FC07FA5
6C5A0007C7FCC81380157FA216005D5D4A5A4A5A5DEC0FC0023FC7FCEB1FFCECFF809038
000FE0EC03F86E7E6E7E157F1680ED3FC0A216E0A2151F16F0A2120C123F487E487EA4ED
3FE05B6CC713C01270ED7F807E6CECFF00000F495A3907C003FC3903F80FF0C6B55A013F
1380D907FCC7FC243F7CBC2D>I<150EA2151E153EA2157E15FEA214011403A21406140E
140C141814381430146014E014C0EB0180130314001306130E130C5B133813305B13E05B
485A120390C7FC1206120E120C5A123812305A12E0B8FCA3C8EAFE00AC4A7E49B6FCA328
3E7EBD2D>I<00061403D807C0130F01F813FE90B55AA215F05D5D92C7FC38063FF890C9
FCADEB01FE90380FFF8090383E03E090387001F8496C7ED807C0137E497F90C713800006
141FC813C0A216E0150FA316F0A4123E127F487EA490C713E048141F12E0006015C01270
0030EC3F8012386CEC7F00001E14FE6C495A3907C003F83903F00FE0C6B55A013F90C7FC
EB07F8243F7CBC2D>I<EC1FE0ECFFF8010313FE90380FF01F90391F80078090383F0003
017EEB0FC049131F4848133F485AA2485A000FEC1F8049EB0F00001F91C7FCA25B123FA3
127F90C9FCEB01FE903807FF8039FF0E03E0496C7E90383800FC49137E0160133E01E013
3F49EB1F8016C05B16E0150FA290C713F0A67EA56C7E16E0A2121FED1FC07F000F158015
3F6C6C14006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC243F7C
BC2D>I<12301238123E003FB612FCA316F85A16F016E00070C8FC0060EC01C0ED038016
005D48140E150C151C5DC8123015705D4A5A5D14034AC7FCA2140EA25CA2143C14381478
A214F85C1301A31303A313075CA3130FA5131FAA6D5A6D5A26407BBD2D>I<EB03FC9038
1FFF80017F13E09038FC03F83901E000FC4848133E48487F48C77E000E1580001E140700
1C15C0003C1403A3123EA2123F15076D1480D81FE0130F6D140001FC131E6C6C5B6D6C5A
6C6D5A6CEBF1E06CEBFF806C91C7FC133F6D13C06D7F4913F801787F48486C7E3903C01F
FF48486C1380260F000313C0487F001E9038007FE048143F007C140F0078EC07F0150312
F8481401A21500A46C15E000781401A2007C15C06C1403001EEC0780001FEC0F00D80FC0
131E6C6C137C3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>I<EB03FCEB1F
FF4913C09038FE07F03901F801F848486C7E4848137C000F147E48487F5B003FEC1F80A2
127F90C713C0A25AED0FE0A516F0A66C141FA27F123F153F121F6C6C137F0007146F6D13
EF3903F001CF3900F8038F90387C070FD91FFE13E0EB07F890C7FC151FA216C0A3ED3F80
A2000F1500486C5B486C137EA25D4A5A138049485A001C495A001EEB1FC0260FC07FC7FC
3803FFFE6C13F838003FC0243F7CBC2D>I<121C127FEAFF80A5EA7F00121CC7FCB3A312
1C127FEAFF80A5EA7F00121C092778A619>I<1507A34B7EA24B7EA34B7EA34B7E156FA2
EDCFF815C7A291380187FC1583A291380301FEA391380600FFA2020E80020C137FA2021C
800218133FA24A80161FA24A80160FA24A6D7EA349486D7E91B6FC4981A291C712014981
010680A24982177FA24982173FA2496F7EA21370717E13F0000183487ED80FFEED3FFEB5
00C00107B512F8A33D417DC044>65 D<DB3FF0130C912603FFFE131C021FEBFF80913A7F
E00FC03C913AFF0001F07CD903FCEB0078D907F0EC3CFCD91FE0140F4948140749481403
49C8FC4848150149150012034848167CA24848163CA24848161CA2123F5B180C127FA349
160012FFAC127F7F180CA2123FA27F001F171C18186C7EA26C6C163818306C6C16700001
17606D16E06C6CED01C06D6CEC03806D6C14076D6CEC0F00D907F0141ED903FC5CD900FF
14F091397FE007E0021FB51280020349C7FC9138003FF036427BBF41>67
D<B712FCEEFF8017E0C69039C0001FF86D48EB03FEEE00FFEF3F80717E717E717E717E71
7EA2717E84841980183F19C0A319E0181FA419F0AB19E0A4183F19C0A21980187FA21900
18FEA24D5A4D5A17074D5A4D5A4D5A05FFC7FCEE03FE496CEB1FF8B85A178004FCC8FC3C
3E7DBD45>I<B91280A3C69038C000036D48EB003FEF1FC017071703A21701A31700A418
60A21630A31800A31670A216F01501150791B5FCA3EC8007150115001670A21630A693C8
FCAFEBFFE0B612F0A3333E7DBD3B>70 D<DB3FF0130C912603FFFE131C021FEBFF80913A
7FE00FC03C913AFF0001F07CD903FCEB0078D907F0EC3CFCD91FE0140F49481407494814
0349C8FC4848150149150012034848167CA24848163CA24848161CA2123F5B180C127FA3
4993C7FC12FFAB041FB512F0127F7F9339000FFE00EF03FC123FA27F121FA26C7EA26C7E
A26C7E6C7EA26C7E6D6C14076D7E6D6C140FD907F8141C6D6CEC387CD900FFECF03C913A
7FF007E01C021FB5EA800C020349C8FC9138003FF03C427BBF47>I<B6D8C01FB512F8A3
C601C0C7381FF8006D486E5AB3A691B7FCA30280C7120FB3A9496C4A7EB6D8C01FB512F8
A33D3E7DBD44>I<B612C0A30001EBE00038007F80B3B3B23801FFE0B612C0A31A3E7DBD
21>I<B612F0A3C601E0C8FCEB7F80B3B01703A517071706A4170EA3171EA2173E177E17
FEEE01FC1607496C133FB8FCA3303E7DBD38>76 D<B56C91387FFFF88080D8007F030313
006EEC00FCD96FF815786E15301367EB63FE80136101607F6E7EA26E7E6E7EA26E7E6E7E
A26E7E6E7EA26E7F6F7E82153F6F7E82150F6F7E8215036F7E6F1380A2EE7FC0EE3FE0A2
EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013B018F0177F173FA2171F170F1707A21703
01F01501487ED807FE1500B500F01570A218303D3E7DBD44>78 D<B712C016FCEEFF80C6
9039C0007FE06D48EB0FF0EE03FC707E707E717E717EA284171F84A760173F6060177F4D
C7FCEE01FC4C5AEE0FE0EEFF8091B500FCC8FC5E91388000FFEE3FC0EE0FE0707E707E83
707EA2707EA684A7190618C0177FA2190E496C91383FE00CB600C0011F131C94380FF038
943807F870CA3801FFE09438003F803F407DBD43>82 D<D907FC131890393FFF803890B5
12E03A01FC03F8783903F0007CD807C0EB1EF84848130F48C71207481403003E1401007E
1400A2007C157812FCA21638A36C1518A27EA26C6C14007F7FEA3FF813FF6C13F06C13FF
15F06C14FC0001806CECFF80013F14C0010714E0EB007F020713F09138007FF8151FED0F
FC15071503ED01FEA200C01400A3167EA27EA3167C7E16FC6C15F86C14016C15F06C1403
6DEB07E0D8FBE0EB0FC0D8F1F8EB1F80D8F07FEB7F0039E01FFFFC010713F039C0007FC0
27427BBF32>I<003FB9FCA3D9E000EBC00190C7397F80003F007EEF1F80007C170F0078
170700701703A300601701A548EF00C0A5C81600B3B24B7E4A7F0107B612F8A33A3E7DBD
41>I<B600C090387FFFF8A3C601C0C7000313006D48EC00FC18781830B3B3A4013F1670
6E1560A218E0011F5E6E1401130F6E4A5A01074BC7FC6D6C5C6D6C140E6D6C143C027F5C
91393FC001F091390FF00FE00203B51280020049C8FCED1FF03D407DBD44>I<EB1FF0EB
FFFC3803E03F390F000FC0001C6D7E001F6D7E486C6C7E6D6C7EA3157E6C5A6CC7FCC8FC
A4EC1FFEEB03FF90381FF87EEB7F803801FC00EA07F0485A485A485A127F90C7FC160312
FEA315FEA21401007F14BE14033A3F80071F06261FC00E138E3A0FF03C0FFC3A03FFF007
F83A003FC003E0282A7CA82D>97 D<49B4FC010F13E090383F00F8017C131E4848130748
48131F4848EB3F804848137FA2485AA248C7EA3F00151E4891C7FCA2127E12FEAB127FA3
6C15C07F001F14016D1480000F14036C6CEB07006C6C13066C6C131E6C6C133890383F01
F090380FFFC0D901FEC7FC222A7DA828>99 D<ED01F815FFA3150715031501B114FF0107
13C190381F80F190387C00394848131D4848130F4848130748481303A248481301123F90
C7FC5AA3127E12FEAA127E127FA27E7F001F1403A26C6C13076C6C130F6C6CEB0DFC6C6C
EB3DFE6C6C903871FFF090383F01E190380FFF81903A01FE01F8002C407DBE32>I<EB03
FC90381FFF8090387E07E09038F801F048486C7E4848137C48487F000F143F48487F1680
48C7FC150F5A16C0127EA212FEA2B7FCA248C9FCA6127E127FA36C15C07F001F14016C6C
148015036C6CEB07006C6C130E6C6C5B6C6C5B90383F01F090380FFFC0D901FEC7FC222A
7DA828>I<EC1FC0ECFFF0903803F038903807C0FC90380F81FE131FEB3F01133E137EEC
00FC491300AFB6FCA3D800FCC7FCB3AE487E387FFFFEA31F407FBF1C>I<167E903903FC
01FF903A0FFF07878090393E07CE0F9038FC03FC3901F801F83B03F000FC070049017CC7
FC0007147EA248487FA86C6C137EA20003147C6D13FC6C6C485A6D485A9038BE07C02603
8FFFC8FCEB03FC48CAFCA47FA27F6C7E90B512F06C14FE6F7E6C6C14E048B612F83907C0
001FD81F80EB03FC48C87E003E157E48153E163F4881A56C5D007C153E007E157E6C5D6C
6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<
EA01F812FFA3120712031201B1EC03FC91380FFF8091383C0FC09138F003E0D9F9C07F90
39FB8001F8140001FF6D7E5BA25BA25BB3A6486C497EB539F07FFFF8A32D3F7EBE32>I<
EA01C0EA07F0487EA56C5AEA01C0C8FCACEA01F8127FA3120712031201B3AC487EB512E0
A3133D7EBC19>I<EA01F812FFA3120712031201B292387FFF80A392381FFC00ED0FE016
804BC7FC151C5D5D5DEC03C04AC8FC140E141E143E147F9038F9FF809038FB9FC0EBFF0F
496C7E01FC7FEBF8036E7E816E7E157E8182151F6F7E826F7EA282486C14FEB539F03FFF
E0A32B3F7EBE30>107 D<EA01F812FFA3120712031201B3B3B1487EB512F0A3143F7EBE
19>I<2701F803FCEB01FE00FF903B0FFF8007FFC0913B3C0FC01E07E0913BF003E07801
F02607F9C0D9F0E07F3D03FB8001F9C000FC000101005C01FFD900FF147E4992C7FCA249
5CA2495CB3A6486C496C14FFB528F07FFFF83F13FCA346287EA74B>I<3901F803FC00FF
90380FFF8091383C0FC09138F003E02607F9C07F3A03FB8001F80001130001FF6D7E5BA2
5BA25BB3A6486C497EB539F07FFFF8A32D287EA732>I<EB01FE90380FFFC090383F03F0
90387C00F8D801F0133E48487F4848EB0F80A24848EB07C0001F15E090C712034815F0A2
007EEC01F8A400FE15FCA9007E15F8A3007F14036C15F0A26C6CEB07E0000F15C06D130F
000715806C6CEB1F006C6C133ED800FC13FC90383F03F090380FFFC0D901FEC7FC262A7D
A82D>I<3901F807F800FFEB1FFF9138780FC09039F9E003F03A03FB8001F86CB4C77E49
147E49147FEE3F8049141F17C0A2EE0FE0A317F01607A9EE0FE0A4EE1FC0A2EE3F806D15
006D5C16FE6D495A9039FB8003F89039F9C007E09039F8F81F80DA3FFEC7FCEC07F091C9
FCAD487EB512F0A32C3A7EA732>I<3903F00FC000FFEB3FF0ECF0F89038F1C3FC000713
83EA03F33801F70313F6EC01F89038FE0060491300A45BB3A4487EB512F8A31E287EA723
>114 D<90387FC0603903FFF8E03807C03D381E000F481303481301A20070130012F015
60A27EA27EB41400EA7FC013FE383FFFE06C13FC00077F6CEBFF80C66C13C0010713E0EB
003FEC0FF000C01303EC01F814007E1578A27EA27E15F07EEC01E06C14C039F780078039
F1E01F0038E0FFFC38C01FE01D2A7DA824>I<1318A61338A41378A213F8A21201120312
07001FB512C0B6FCA2D801F8C7FCB3A21560A96C6C13E015C0A2EB7E0190383F03809038
1F8700EB07FEEB01F81B397EB723>I<D801F814FC00FF147FA300071403000314010001
1400B3A51501A3150312006D1307ED0EFE017C497E6D4913F890381F80F0903807FFE001
00903800FC002D297EA732>I<B53B87FFFC03FFF0A33D0FFC003FE0007FC0D807F06D48
EB3F0000036E48131E70131C6C7E03071418826C6C010F5CA26D6E1370017E01191460A2
017F6E13E06D01305CA20280EBFC01011FD9607C5BA290280FC0E07E03C7FCEDC03EA2D9
07E1EB3F06ED801F1786D903F3148CED000F17CCD901FEEB07D8A217F86D486D5AA30278
6D5AA302306D5A3C287EA641>119 D<3B7FFFC00FFFE0A3000390390007FE00C6EC03F8
6D14E06D5C02805B6D6C48C7FC010F130E903807E00C6E5A903803F83801015B6D6C5A6E
5AEC7F80143F141F6E7E81141FEC3BF0EC71F8ECE1FCECC0FE903801807E01037FD90700
7F010E6D7E010C130F011C6D7E498001F86D7E000181D80FFC497EB590381FFFF8A32D27
7FA630>I<B539C007FFE0A32707FC000113006C48EB007C0001157816707F000015607F
017E5CA26D495AA2EC8003011F91C7FCA290380FC006A2ECE00E0107130CA26D6C5AA2EC
F8380101133014FC01005BA2EC7EC0A2147F6E5AA26EC8FCA3140EA2140CA2141C1418A2
5CA25C1238007C13E000FE5B13015C49C9FCEA7C07EA700EEA383CEA1FF8EA07E02B3A7E
A630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 10.95 1
/Fb 1 16 df<EB0FFCEB3FFF90B512C0000314F04880488048804880A2481580A3B712C0
AA6C1580A36C1500A26C5C6C5C6C5C6C5CC614C0013F90C7FCEB0FFC22227BA72D>15
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 518 548 a
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@B1 16 {InitRnode } NewNode end end
 518 548 a Fb(\017)564 548 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@A /N@B1 InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 564 548
a 45 w Fa(System)718 661 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718 661 a Fb(\017)764 661
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 661 a 45 w Fa(name:)41 b(defaultCD)m(A)-8 b(T)g(A0)718
774 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Cb 16 {InitRnode } NewNode end end
 718 774 a Fb(\017)764 774 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Cb InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 774 a 45 w Fa(id:)41
b(a0)718 887 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718 887 a Fb(\017)764 887 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 887 a
45 w Fa(Group)888 1000 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Di 16 {InitRnode } NewNode end end
 888 1000 a Fb(\017)934 1000
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Di InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1000 a 45 w Fa(name:)g(defaultCD)m(A)-8 b(T)g(A1)888
1112 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dii 16 {InitRnode } NewNode end end
 888 1112 a Fb(\017)934 1112 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dii InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1112 a 45 w
Fa(id:)41 b(a1)888 1225 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Diii 16 {InitRnode } NewNode end end
 888 1225 a Fb(\017)934 1225
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Diii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1225 a 45 w Fa(Geometry:)g(Rect)1043 1338 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043
1338 a Fb(\017)1088 1338 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1338 a 46 w Fa(heigh)m(t:)h(defaultCD)m
(A)-8 b(T)g(A3)1043 1451 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1451 a Fb(\017)1088 1451
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1451 a 46 w Fa(width:)41 b(defaultCD)m(A)-8 b(T)g(A2)888
1564 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Div 16 {InitRnode } NewNode end end
 888 1564 a Fb(\017)934 1564 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Div InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1564 a 45 w
Fa(ConnectionT)g(o)1043 1677 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1677 a Fb(\017)1088
1677 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1677 a 46 w Fa(id:)40 b(a3)1043 1790 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
1790 a Fb(\017)1088 1790 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1790 a 46 w Fa(target:)h(a2)888
1903 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dv 16 {InitRnode } NewNode end end
 888 1903 a Fb(\017)934 1903 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dv InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1903 a 45 w
Fa(ConnectionT)-8 b(o)1043 2016 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2016 a Fb(\017)1088
2016 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2016 a 46 w Fa(id:)40 b(a4)1043 2129 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
2129 a Fb(\017)1088 2129 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2129 a 46 w Fa(target:)h(a3)888
2242 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvi 16 {InitRnode } NewNode end end
 888 2242 a Fb(\017)934 2242 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2242 a 45 w
Fa(ConnectionT)-8 b(o)1043 2355 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2355 a Fb(\017)1088
2355 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2355 a 46 w Fa(id:)40 b(a5)1043 2467 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
2467 a Fb(\017)1088 2467 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2467 a 46 w Fa(target:)h(a4)888
2580 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvii 16 {InitRnode } NewNode end end
 888 2580 a Fb(\017)934 2580 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2580 a 45 w
Fa(ConnectionT)-8 b(o)1043 2693 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2693 a Fb(\017)1088
2693 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2693 a 46 w Fa(id:)40 b(a6)1043 2806 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
2806 a Fb(\017)1088 2806 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2806 a 46 w Fa(target:)h(a5)888
2919 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dviii 16 {InitRnode } NewNode end end
 888 2919 a Fb(\017)934 2919 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dviii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2919 a 45 w
Fa(ConnectionT)-8 b(o)1043 3032 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3032 a Fb(\017)1088
3032 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3032 a 46 w Fa(id:)40 b(a10)1043 3145 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
3145 a Fb(\017)1088 3145 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3145 a 46 w Fa(target:)h(a9)888
3258 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dix 16 {InitRnode } NewNode end end
 888 3258 a Fb(\017)934 3258 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dix InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3258 a 45 w
Fa(ConnectionT)-8 b(o)1043 3371 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3371 a Fb(\017)1088
3371 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3371 a 46 w Fa(id:)40 b(a11)1043 3484 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
3484 a Fb(\017)1088 3484 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3484 a 46 w Fa(target:)h(a10)888
3597 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dx 16 {InitRnode } NewNode end end
 888 3597 a Fb(\017)934 3597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dx InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3597 a 45 w
Fa(ConnectionT)-8 b(o)1043 3709 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3709 a Fb(\017)1088
3709 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3709 a 46 w Fa(id:)40 b(a12)1043 3822 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043
3822 a Fb(\017)1088 3822 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3822 a 46 w Fa(target:)h(a11)888
3935 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dxi 16 {InitRnode } NewNode end end
 888 3935 a Fb(\017)934 3935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dxi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3935 a 45 w
Fa(Neuron)31 b(T)m(yp)s(e:)41 b(NeuronT)-8 b(anH)718
4048 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718 4048 a Fb(\017)764 4048 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 4048 a 45 w
Fa(Group)888 4161 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Di 16 {InitRnode } NewNode end end
 888 4161 a Fb(\017)934 4161 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Di InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934
4161 a 45 w Fa(name:)41 b(defaultCD)m(A)-8 b(T)g(A5)888
4274 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dii 16 {InitRnode } NewNode end end
 888 4274 a Fb(\017)934 4274 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dii InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4274 a 45 w
Fa(id:)41 b(a2)888 4387 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Diii 16 {InitRnode } NewNode end end
 888 4387 a Fb(\017)934 4387
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Diii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4387 a 45 w Fa(Geometry:)g(Sparse)1043 4500 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043
4500 a Fb(\017)1088 4500 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4500 a 46 w Fa(p)s(oin)m(t:)g
(\(defaultCD)m(A)-8 b(T)g(A7,)33 b(defaultCD)m(A)-8 b(T)g(A6\))1043
4613 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4613 a Fb(\017)1088 4613 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4613 a 46
w Fa(p)s(oin)m(t:)41 b(\(defaultCD)m(A)-8 b(T)g(A9,)33
b(defaultCD)m(A)-8 b(T)g(A8\))888 4726 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Div 16 {InitRnode } NewNode end end
 888 4726 a Fb(\017)934
4726 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Div InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4726 a 45 w Fa(ConnectionT)g(o)1043 4839 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end

1043 4839 a Fb(\017)1088 4839 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4839 a 46 w Fa(id:)40
b(a3)1043 4951 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4951 a Fb(\017)1088 4951 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
4951 a 46 w Fa(target:)h(a2)888 5064 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dv 16 {InitRnode } NewNode end end
 888 5064 a Fb(\017)934
5064 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dv InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 5064 a 45 w Fa(ConnectionT)-8 b(o)1043 5177
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 5177 a Fb(\017)1088 5177 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 5177 a 46 w Fa(id:)40
b(a4)1043 5290 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 5290 a Fb(\017)1088 5290 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
5290 a 46 w Fa(target:)h(a3)888 5403 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvi 16 {InitRnode } NewNode end end
 888 5403 a Fb(\017)934
5403 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 5403 a 45 w Fa(ConnectionT)-8 b(o)1854 5652
y(1)p eop
%%Page: 2 2
2 1 bop 1043 548 a
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 548 a Fb(\017)1088 548 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
548 a 46 w Fa(id:)40 b(a5)1043 661 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 661 a Fb(\017)1088
661 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 661 a 46 w Fa(target:)h(a4)888 774 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvii 16 {InitRnode } NewNode end end
 888 774
a Fb(\017)934 774 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 774 a 45 w Fa(ConnectionT)-8
b(o)1043 887 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 887 a Fb(\017)1088 887 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 887
a 46 w Fa(id:)40 b(a6)1043 1000 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1000 a Fb(\017)1088
1000 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1000 a 46 w Fa(target:)h(a5)888 1112 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dviii 16 {InitRnode } NewNode end end
 888
1112 a Fb(\017)934 1112 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dviii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1112 a 45 w Fa(ConnectionT)-8
b(o)1043 1225 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1225 a Fb(\017)1088 1225 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1225 a 46 w Fa(id:)40 b(a10)1043 1338 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1338 a Fb(\017)1088
1338 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1338 a 46 w Fa(target:)h(a9)888 1451 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dix 16 {InitRnode } NewNode end end
 888
1451 a Fb(\017)934 1451 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dix InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1451 a 45 w Fa(ConnectionT)-8
b(o)1043 1564 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1564 a Fb(\017)1088 1564 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1564 a 46 w Fa(id:)40 b(a11)1043 1677 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1677 a Fb(\017)1088
1677 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1677 a 46 w Fa(target:)h(a10)888 1790 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dx 16 {InitRnode } NewNode end end
 888
1790 a Fb(\017)934 1790 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dx InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1790 a 45 w Fa(ConnectionT)-8
b(o)1043 1903 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1903 a Fb(\017)1088 1903 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1903 a 46 w Fa(id:)40 b(a12)1043 2016 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2016 a Fb(\017)1088
2016 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2016 a 46 w Fa(target:)h(a11)888 2129 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dxi 16 {InitRnode } NewNode end end
 888
2129 a Fb(\017)934 2129 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dxi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2129 a 45 w Fa(Neuron)31
b(T)m(yp)s(e:)41 b(NeuronIn)m(tegFire)718 2242 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718
2242 a Fb(\017)764 2242 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 2242 a 45 w Fa(Group)888
2355 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Di 16 {InitRnode } NewNode end end
 888 2355 a Fb(\017)934 2355 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Di InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2355 a 45 w
Fa(name:)g(defaultCD)m(A)-8 b(T)g(A59)888 2467 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dii 16 {InitRnode } NewNode end end
 888
2467 a Fb(\017)934 2467 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dii InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2467 a 45 w Fa(id:)41 b(a7)888
2580 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Diii 16 {InitRnode } NewNode end end
 888 2580 a Fb(\017)934 2580 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Diii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2580 a 45 w
Fa(Geometry:)g(Hex)1043 2693 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2693 a Fb(\017)1088
2693 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2693 a 46 w Fa(heigh)m(t:)h(defaultCD)m(A)-8
b(T)g(A62)1043 2806 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2806 a Fb(\017)1088 2806 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

1088 2806 a 46 w Fa(width:)1043 2919 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EC 16 {InitRnode } NewNode end end
 1043 2919 a Fb(\017)1088
2919 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EC InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2919 a 46 w Fa(o\033set:)40 b(defaultCD)m(A)-8
b(T)g(A63)1043 3032 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@ED 16 {InitRnode } NewNode end end
 1043 3032 a Fb(\017)1088 3032 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@ED InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

1088 3032 a 46 w Fa(orien)m(tation:)42 b(defaultCD)m(A)-8
b(T)g(A61)888 3145 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Div 16 {InitRnode } NewNode end end
 888 3145 a Fb(\017)934 3145 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Div InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934
3145 a 45 w Fa(ConnectionT)g(o)1043 3258 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3258
a Fb(\017)1088 3258 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3258 a 46 w Fa(id:)40 b(a3)1043
3371 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 3371 a Fb(\017)1088 3371 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3371 a 46
w Fa(target:)h(a2)888 3484 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dv 16 {InitRnode } NewNode end end
 888 3484 a Fb(\017)934 3484
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dv InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3484 a 45 w Fa(ConnectionT)-8 b(o)1043 3597 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043
3597 a Fb(\017)1088 3597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3597 a 46 w Fa(id:)40
b(a4)1043 3709 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 3709 a Fb(\017)1088 3709 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
3709 a 46 w Fa(target:)h(a3)888 3822 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvi 16 {InitRnode } NewNode end end
 888 3822 a Fb(\017)934
3822 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3822 a 45 w Fa(ConnectionT)-8 b(o)1043 3935
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3935 a Fb(\017)1088 3935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3935 a 46 w Fa(id:)40
b(a5)1043 4048 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4048 a Fb(\017)1088 4048 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
4048 a 46 w Fa(target:)h(a4)888 4161 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvii 16 {InitRnode } NewNode end end
 888 4161 a Fb(\017)934
4161 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4161 a 45 w Fa(ConnectionT)-8 b(o)1043 4274
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 4274 a Fb(\017)1088 4274 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4274 a 46 w Fa(id:)40
b(a6)1043 4387 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4387 a Fb(\017)1088 4387 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
4387 a 46 w Fa(target:)h(a5)888 4500 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dviii 16 {InitRnode } NewNode end end
 888 4500 a Fb(\017)934
4500 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dviii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4500 a 45 w Fa(ConnectionT)-8 b(o)1043 4613
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 4613 a Fb(\017)1088 4613 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4613 a 46 w Fa(id:)40
b(a10)1043 4726 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4726 a Fb(\017)1088 4726 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
4726 a 46 w Fa(target:)h(a9)888 4839 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dix 16 {InitRnode } NewNode end end
 888 4839 a Fb(\017)934
4839 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dix InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4839 a 45 w Fa(ConnectionT)-8 b(o)1043 4951
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 4951 a Fb(\017)1088 4951 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4951 a 46 w Fa(id:)40
b(a11)1043 5064 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 5064 a Fb(\017)1088 5064 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
5064 a 46 w Fa(target:)h(a10)888 5177 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dx 16 {InitRnode } NewNode end end
 888 5177 a Fb(\017)934
5177 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dx InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 5177 a 45 w Fa(ConnectionT)-8 b(o)1043 5290
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 5290 a Fb(\017)1088 5290 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 5290 a 46 w Fa(id:)40
b(a12)1043 5403 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 5403 a Fb(\017)1088 5403 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
5403 a 46 w Fa(target:)h(a11)1854 5652 y(2)p eop
%%Page: 3 3
3 2 bop 888 548 a
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dxi 16 {InitRnode } NewNode end end
 888 548 a Fb(\017)934 548 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dxi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 548
a 45 w Fa(Neuron)31 b(T)m(yp)s(e:)41 b(NeuronLinearThreshold)718
661 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718 661 a Fb(\017)764 661 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 661 a 45 w Fa(Group)888
774 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Di 16 {InitRnode } NewNode end end
 888 774 a Fb(\017)934 774 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Di InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 774 a 45 w Fa(name:)g(defaultCD)m
(A)-8 b(T)g(A65)888 887 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dii 16 {InitRnode } NewNode end end
 888 887 a Fb(\017)934 887 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dii InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

934 887 a 45 w Fa(id:)41 b(a8)888 1000 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Diii 16 {InitRnode } NewNode end end
 888 1000 a Fb(\017)934
1000 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Diii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1000 a 45 w Fa(Geometry:)g(Rect)1043 1112
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1112 a Fb(\017)1088 1112 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1112 a 46 w Fa(heigh)m(t:)h
(defaultCD)m(A)-8 b(T)g(A67)1043 1225 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1225 a Fb(\017)1088
1225 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1225 a 46 w Fa(width:)41 b(defaultCD)m(A)-8
b(T)g(A66)888 1338 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Div 16 {InitRnode } NewNode end end
 888 1338 a Fb(\017)934 1338 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Div InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934
1338 a 45 w Fa(ConnectionT)g(o)1043 1451 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1451
a Fb(\017)1088 1451 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1451 a 46 w Fa(id:)40 b(a3)1043
1564 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1564 a Fb(\017)1088 1564 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1564 a 46
w Fa(target:)h(a2)888 1677 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dv 16 {InitRnode } NewNode end end
 888 1677 a Fb(\017)934 1677
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dv InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1677 a 45 w Fa(ConnectionT)-8 b(o)1043 1790 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043
1790 a Fb(\017)1088 1790 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1790 a 46 w Fa(id:)40
b(a4)1043 1903 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1903 a Fb(\017)1088 1903 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1903 a 46 w Fa(target:)h(a3)888 2016 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvi 16 {InitRnode } NewNode end end
 888 2016 a Fb(\017)934
2016 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2016 a 45 w Fa(ConnectionT)-8 b(o)1043 2129
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2129 a Fb(\017)1088 2129 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2129 a 46 w Fa(id:)40
b(a5)1043 2242 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2242 a Fb(\017)1088 2242 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
2242 a 46 w Fa(target:)h(a4)888 2355 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvii 16 {InitRnode } NewNode end end
 888 2355 a Fb(\017)934
2355 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2355 a 45 w Fa(ConnectionT)-8 b(o)1043 2467
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2467 a Fb(\017)1088 2467 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2467 a 46 w Fa(id:)40
b(a6)1043 2580 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2580 a Fb(\017)1088 2580 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
2580 a 46 w Fa(target:)h(a5)888 2693 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dviii 16 {InitRnode } NewNode end end
 888 2693 a Fb(\017)934
2693 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dviii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2693 a 45 w Fa(ConnectionT)-8 b(o)1043 2806
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 2806 a Fb(\017)1088 2806 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2806 a 46 w Fa(id:)40
b(a10)1043 2919 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2919 a Fb(\017)1088 2919 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
2919 a 46 w Fa(target:)h(a9)888 3032 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dix 16 {InitRnode } NewNode end end
 888 3032 a Fb(\017)934
3032 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dix InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3032 a 45 w Fa(ConnectionT)-8 b(o)1043 3145
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3145 a Fb(\017)1088 3145 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3145 a 46 w Fa(id:)40
b(a11)1043 3258 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 3258 a Fb(\017)1088 3258 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
3258 a 46 w Fa(target:)h(a10)888 3371 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dx 16 {InitRnode } NewNode end end
 888 3371 a Fb(\017)934
3371 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dx InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3371 a 45 w Fa(ConnectionT)-8 b(o)1043 3484
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 3484 a Fb(\017)1088 3484 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 3484 a 46 w Fa(id:)40
b(a12)1043 3597 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 3597 a Fb(\017)1088 3597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
3597 a 46 w Fa(target:)h(a11)888 3709 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dxi 16 {InitRnode } NewNode end end
 888 3709 a Fb(\017)934
3709 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dxi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3709 a 45 w Fa(Neuron)31 b(T)m(yp)s(e:)41
b(NeuronRandomSpik)m(e)718 3822 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Ca 16 {InitRnode } NewNode end end
 718 3822 a Fb(\017)764
3822 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@B1 /N@Ca InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 764 3822 a 45 w Fa(Group)888 3935 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Di 16 {InitRnode } NewNode end end
 888 3935 a
Fb(\017)934 3935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Di InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 3935 a 45 w Fa(name:)g(defaultCD)m(A)-8
b(T)g(A69)888 4048 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dii 16 {InitRnode } NewNode end end
 888 4048 a Fb(\017)934 4048 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dii InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934
4048 a 45 w Fa(id:)41 b(a9)888 4161 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Diii 16 {InitRnode } NewNode end end
 888 4161 a Fb(\017)934
4161 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Diii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4161 a 45 w Fa(Geometry:)g(Hex)1043 4274 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end

1043 4274 a Fb(\017)1088 4274 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4274 a 46 w Fa(heigh)m(t:)h
(defaultCD)m(A)-8 b(T)g(A72)1043 4387 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4387 a Fb(\017)1088
4387 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4387 a 46 w Fa(width:)1043 4500 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EC 16 {InitRnode } NewNode end end
 1043 4500
a Fb(\017)1088 4500 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@EC InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4500 a 46 w Fa(o\033set:)40
b(defaultCD)m(A)-8 b(T)g(A73)1043 4613 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@ED 16 {InitRnode } NewNode end end
 1043 4613 a
Fb(\017)1088 4613 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Diii /N@ED InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4613 a 46 w Fa(orien)m(tation:)42
b(defaultCD)m(A)-8 b(T)g(A71)888 4726 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Div 16 {InitRnode } NewNode end end
 888 4726 a Fb(\017)934
4726 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Div InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 4726 a 45 w Fa(ConnectionT)g(o)1043 4839 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end

1043 4839 a Fb(\017)1088 4839 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 4839 a 46 w Fa(id:)40
b(a3)1043 4951 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 4951 a Fb(\017)1088 4951 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Div /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
4951 a 46 w Fa(target:)h(a2)888 5064 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dv 16 {InitRnode } NewNode end end
 888 5064 a Fb(\017)934
5064 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dv InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 5064 a 45 w Fa(ConnectionT)-8 b(o)1043 5177
y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 5177 a Fb(\017)1088 5177 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 5177 a 46 w Fa(id:)40
b(a4)1043 5290 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 5290 a Fb(\017)1088 5290 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dv /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
5290 a 46 w Fa(target:)h(a3)888 5403 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvi 16 {InitRnode } NewNode end end
 888 5403 a Fb(\017)934
5403 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 5403 a 45 w Fa(ConnectionT)-8 b(o)1854 5652
y(3)p eop
%%Page: 4 4
4 3 bop 1043 548 a
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 548 a Fb(\017)1088 548 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
548 a 46 w Fa(id:)40 b(a5)1043 661 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 661 a Fb(\017)1088
661 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvi /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 661 a 46 w Fa(target:)h(a4)888 774 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dvii 16 {InitRnode } NewNode end end
 888 774
a Fb(\017)934 774 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dvii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 774 a 45 w Fa(ConnectionT)-8
b(o)1043 887 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 887 a Fb(\017)1088 887 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 887
a 46 w Fa(id:)40 b(a6)1043 1000 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1000 a Fb(\017)1088
1000 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dvii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1000 a 46 w Fa(target:)h(a5)888 1112 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dviii 16 {InitRnode } NewNode end end
 888
1112 a Fb(\017)934 1112 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dviii InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1112 a 45 w Fa(ConnectionT)-8
b(o)1043 1225 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1225 a Fb(\017)1088 1225 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EA InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1225 a 46 w Fa(id:)40 b(a10)1043 1338 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1338 a Fb(\017)1088
1338 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dviii /N@EB InitNC { tx@Dict begin /Lineto /lineto
load def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def
/ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1338 a 46 w Fa(target:)h(a9)888 1451 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dix 16 {InitRnode } NewNode end end
 888
1451 a Fb(\017)934 1451 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dix InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1451 a 45 w Fa(ConnectionT)-8
b(o)1043 1564 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1564 a Fb(\017)1088 1564 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1564 a 46 w Fa(id:)40 b(a11)1043 1677 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 1677 a Fb(\017)1088
1677 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dix /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 1677 a 46 w Fa(target:)h(a10)888 1790 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dx 16 {InitRnode } NewNode end end
 888
1790 a Fb(\017)934 1790 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dx InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 1790 a 45 w Fa(ConnectionT)-8
b(o)1043 1903 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EA 16 {InitRnode } NewNode end end
 1043 1903 a Fb(\017)1088 1903 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EA InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088
1903 a 46 w Fa(id:)40 b(a12)1043 2016 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@EB 16 {InitRnode } NewNode end end
 1043 2016 a Fb(\017)1088
2016 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Dx /N@EB InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1088 2016 a 46 w Fa(target:)h(a11)888 2129 y
 tx@Dict begin tx@NodeDict begin {4.86667 0.0 5.475 2.7375 2.43333
} false /N@Dxi 16 {InitRnode } NewNode end end
 888
2129 a Fb(\017)934 2129 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
-14.14023 0 0 /N@Ca /N@Dxi InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 90. def /AngleB 0. def /ArmA 10.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 934 2129 a 45 w Fa(Neuron)31
b(T)m(yp)s(e:)41 b(NeuronUserDef)1854 5652 y(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
