#############################################################################
# Makefile for building: appUSBVideo
# Generated by qmake (1.04a) (Qt 3.1.1) on: Tue Apr 27 15:17:26 2004
# Project:  appUSBVideo.pro
# Template: app
# Command: $(QMAKE) -o Makefile.app appUSBVideo.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG  -DLINUX
CXXFLAGS = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG  -DLINUX
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/linux-g++ -I.  -I../Common -I/usr/X11R6/include/Xutil.h -I/usr/X11R6/include/X11 -I/usr/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib/ -L/usr/X11R6/lib -lX11 -L../Common/ccvt-0.3 -lccvt
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = bin/

####### Files

HEADERS = moduleUSBVideo.hpp \
		../Common/ClsXWin.h
SOURCES = main.cpp \
		moduleUSBVideo.cpp
OBJECTS = bin/main.o \
		bin/moduleUSBVideo.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = appUSBVideo.pro
QMAKE_TARGET = appUSBVideo
DESTDIR  = 
TARGET   = appUSBVideo

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile.app $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile.app: appUSBVideo.pro  $(QTDIR)/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile.app appUSBVideo.pro
qmake: 
	@$(QMAKE) -o Makefile.app appUSBVideo.pro

dist: 
	@mkdir -p bin/appUSBVideo && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) bin/appUSBVideo/ && ( cd `dirname bin/appUSBVideo` && $(TAR) appUSBVideo.tar appUSBVideo && $(GZIP) appUSBVideo.tar ) && $(MOVE) `dirname bin/appUSBVideo`/appUSBVideo.tar.gz . && $(DEL_FILE) -r bin/appUSBVideo

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

bin/main.o: main.cpp moduleUSBVideo.hpp \
		../Common/ClsXWin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bin/main.o main.cpp

bin/moduleUSBVideo.o: moduleUSBVideo.cpp moduleUSBVideo.hpp \
		../Common/ccvt-0.3/ccvt.h \
		../Common/ClsXWin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bin/moduleUSBVideo.o moduleUSBVideo.cpp

####### Install

install: all 

uninstall: 

